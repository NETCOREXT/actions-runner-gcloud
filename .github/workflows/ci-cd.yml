name: Build and Deploy

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      force:
        description: 'Force exec'
        type: boolean
        required: true

jobs:
  Detect:
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.detect.outputs.app }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Detect Change
        id: detect
        run: |
          APP="${GITHUB_REPOSITORY#*/}"

          CHANGE_FILES=`git diff --no-commit-id --name-only HEAD^`

          CHANGED=`echo "$CHANGE_FILES" | grep -Em 1 "dockerfile" || true`
          if [ -z "$CHANGED" ] && [ "${{ inputs.force }}" != true ]; then
            APP=""
          fi

          echo "app=${APP}" >> $GITHUB_OUTPUT
  Build:
    name: "Build ${{ needs.Detect.outputs.app }}"
    needs: Detect
    if: needs.Detect.outputs.app != ''
    runs-on: ubuntu-latest
    env:
      app: ${{ needs.Detect.outputs.app }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: envs
        uses: netcorext/base-info-action@dev
        with:
          app: ${{ env.app }}
          version: 1.0.0
          image-prefix: ${{ vars.IMAGE_PREFIX }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Image & Push
        uses: netcorext/buildx-image-action@dev
        with:
          image: ${{ steps.envs.outputs.image-fullName }}
          tag: ${{ steps.envs.outputs.tag }}
          tag-hash: ${{ steps.envs.outputs.tag-hash }}
          tag-latest: ${{ steps.envs.outputs.tag-latest }}
